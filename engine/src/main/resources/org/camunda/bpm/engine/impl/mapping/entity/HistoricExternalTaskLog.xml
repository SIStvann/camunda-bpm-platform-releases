<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.camunda.bpm.engine.impl.history.event.HistoricExternalTaskLogEntity">

  <!-- INSERT -->

  <insert id="insertHistoricExternalTaskLog" parameterType="org.camunda.bpm.engine.impl.history.event.HistoricExternalTaskLogEntity">
    insert into ${prefix}ACT_HI_EXT_TASK_LOG (
      ID_,
      TIMESTAMP_,
      EXT_TASK_ID_,
      RETRIES_,
      TOPIC_NAME_,
      WORKER_ID_,
      PRIORITY_,
      ERROR_MSG_,
      ERROR_DETAILS_ID_,
      ACT_ID_,
      ACT_INST_ID_,
      EXECUTION_ID_,
      PROC_INST_ID_,
      PROC_DEF_ID_,
      PROC_DEF_KEY_,
      TENANT_ID_,
      STATE_
    )
    values (#{id, jdbcType=VARCHAR},
      #{timestamp, jdbcType=TIMESTAMP},
      #{externalTaskId, jdbcType=VARCHAR},
      #{retries, jdbcType=INTEGER},
      #{topicName, jdbcType=VARCHAR},
      #{workerId, jdbcType=VARCHAR},
      #{priority, jdbcType=BIGINT},
      #{errorMessage, jdbcType=VARCHAR},
      #{errorDetailsByteArrayId, jdbcType=VARCHAR},
      #{activityId, jdbcType=VARCHAR},
      #{activityInstanceId, jdbcType=VARCHAR},
      #{executionId, jdbcType=VARCHAR},
      #{processInstanceId, jdbcType=VARCHAR},
      #{processDefinitionId, jdbcType=VARCHAR},
      #{processDefinitionKey, jdbcType=VARCHAR},
      #{tenantId, jdbcType=VARCHAR},
      #{state, jdbcType=INTEGER}
    )
  </insert>

  <!-- DELETE -->

  <delete id="deleteHistoricExternalTaskLogByProcessInstanceId">
    delete from ${prefix}ACT_HI_EXT_TASK_LOG where PROC_INST_ID_ = #{processInstanceId}
  </delete>

  <delete id="deleteHistoricExternalTaskLogByProcessInstanceIds">
    delete from ${prefix}ACT_HI_EXT_TASK_LOG where PROC_INST_ID_ IN
    <foreach item="processInstanceId" index="index" collection="list" open="(" separator="," close=")">
      #{processInstanceId}
    </foreach>
  </delete>

  <!-- BYTE ARRAY DELETE -->

  <delete id="deleteErrorDetailsByteArraysByIds">
    delete
    from
      ${prefix}ACT_GE_BYTEARRAY
    <where>
      ID_ in (<include refid="selectErrorDetailsByteArrayIds"/>)
    </where>
  </delete>

  <!-- RESULT MAP -->

  <resultMap id="historicExternalTaskLogMap" type="org.camunda.bpm.engine.impl.history.event.HistoricExternalTaskLogEntity">
    <id property="id" column="ID_" jdbcType="VARCHAR" />
    <result property="timestamp" column="TIMESTAMP_" jdbcType="TIMESTAMP" />
    <result property="externalTaskId" column="EXT_TASK_ID_" jdbcType="VARCHAR" />
    <result property="retries" column="RETRIES_" jdbcType="INTEGER" />
    <result property="topicName" column="TOPIC_NAME_" jdbcType="VARCHAR" />
    <result property="workerId" column="WORKER_ID_" jdbcType="VARCHAR" />
    <result property="priority" column="PRIORITY_" jdbcType="BIGINT" />
    <result property="errorMessage" column="ERROR_MSG_" jdbcType="VARCHAR" />
    <result property="errorDetailsByteArrayId" column="ERROR_DETAILS_ID_" jdbcType="VARCHAR" />
    <result property="activityId" column="ACT_ID_" jdbcType="VARCHAR" />
    <result property="activityInstanceId" column="ACT_INST_ID_" jdbcType="VARCHAR" />
    <result property="executionId" column="EXECUTION_ID_" jdbcType="VARCHAR" />
    <result property="processInstanceId" column="PROC_INST_ID_" jdbcType="VARCHAR" />
    <result property="processDefinitionId" column="PROC_DEF_ID_" jdbcType="VARCHAR" />
    <result property="processDefinitionKey" column="PROC_DEF_KEY_" jdbcType="VARCHAR" />
    <result property="tenantId" column="TENANT_ID_" jdbcType="VARCHAR" />
    <result property="state" column="STATE_" jdbcType="VARCHAR" />
  </resultMap>

  <!-- SELECT -->

  <sql id="selectErrorDetailsByteArrayIds">
    select
      ERROR_DETAILS_ID_
    from
      ${prefix}ACT_HI_EXT_TASK_LOG
    <where>
      ERROR_DETAILS_ID_ is not null
      <if test="id != null">
        and ID_ = #{id, jdbcType=VARCHAR}
      </if>
      <if test="externalTaskId != null">
        and RES.EXT_TASK_ID_ = #{externalTaskId, jdbcType=VARCHAR}
      </if>
      <if test="topicName != null">
        and RES.TOPIC_NAME_ = #{topicName, jdbcType=VARCHAR}
      </if>
      <if test="workerId != null">
        and RES.WORKER_ID_ = #{workerId, jdbcType=VARCHAR}
      </if>
      <if test="executionId != null">
        and EXECUTION_ID_ = #{executionId, jdbcType=VARCHAR}
      </if>
      <if test="processInstanceId != null">
        and PROC_INST_ID_ = #{processInstanceId, jdbcType=VARCHAR}
      </if>
      <if test="processInstanceIdIn != null &amp;&amp; processInstanceIdIn.length > 0">
        and PROC_INST_ID_ in
        <foreach item="item" index="index" collection="processInstanceIdIn"
                 open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="processDefinitionId != null">
        and PROC_DEF_ID_ = #{processDefinitionId, jdbcType=VARCHAR}
      </if>
      <if test="processDefinitionKey != null">
        and PROC_DEF_KEY_ = #{processDefinitionKey, jdbcType=VARCHAR}
      </if>
    </where>
  </sql>

  <select id="selectHistoricExternalTaskLog" resultMap="historicExternalTaskLogMap">
    select * from ${prefix}ACT_HI_EXT_TASK_LOG where ID_ = #{id}
  </select>

  <select id="selectHistoricExternalTaskLogByQueryCriteria" parameterType="org.camunda.bpm.engine.impl.HistoricExternalTaskLogQueryImpl" resultMap="historicExternalTaskLogMap">
    <include refid="org.camunda.bpm.engine.impl.persistence.entity.Commons.bindOrderBy"/>
    ${limitBefore}
    select ${distinct} RES.*
    ${limitBetween}
    <include refid="selectHistoricExternalTaskLogByQueryCriteriaSql"/>
    ${orderBy}
    ${limitAfter}
  </select>

  <select id="selectHistoricExternalTaskLogCountByQueryCriteria" parameterType="org.camunda.bpm.engine.impl.HistoricExternalTaskLogQueryImpl" resultType="long">
    select count(distinct RES.ID_)
    <include refid="selectHistoricExternalTaskLogByQueryCriteriaSql"/>
  </select>

  <sql id="selectHistoricExternalTaskLogByQueryCriteriaSql">
    from (

      SELECT SELF.* FROM ${prefix}ACT_HI_EXT_TASK_LOG SELF
      <if test="authCheck.isAuthorizationCheckEnabled &amp;&amp; !authCheck.revokeAuthorizationCheckEnabled &amp;&amp; authCheck.authUserId != null">
        <include refid="org.camunda.bpm.engine.impl.persistence.entity.AuthorizationEntity.authCheckJoinWithoutOnClause"/>
        AUTH ON (AUTH.RESOURCE_ID_ in (SELF.PROC_DEF_KEY_, '*'))
      </if>

      <where>
        <if test="id != null">
          SELF.ID_ = #{id}
        </if>
        <if test="externalTaskId != null">
          and SELF.EXT_TASK_ID_ = #{externalTaskId}
        </if>
        <if test="errorMessage != null">
          and SELF.ERROR_MSG_ = #{errorMessage}
        </if>
        <if test="topicName != null">
          and SELF.TOPIC_NAME_ = #{topicName}
        </if>
        <if test="workerId != null">
          and SELF.WORKER_ID_ = #{workerId}
        </if>
        <if test="activityIds != null &amp;&amp; activityIds.length > 0">
          and SELF.ACT_ID_ in
          <foreach item="item" index="index" collection="activityIds"
                   open="(" separator="," close=")">
            #{item}
          </foreach>
        </if>
        <if test="activityInstanceIds != null &amp;&amp; activityInstanceIds.length > 0">
          and SELF.ACT_INST_ID_ in
          <foreach item="item" index="index" collection="activityInstanceIds"
                   open="(" separator="," close=")">
            #{item}
          </foreach>
        </if>
        <if test="executionIds != null &amp;&amp; executionIds.length > 0">
          and SELF.EXECUTION_ID_ in
          <foreach item="item" index="index" collection="executionIds"
                   open="(" separator="," close=")">
            #{item}
          </foreach>
        </if>
        <if test="processInstanceId != null">
          and SELF.PROC_INST_ID_ = #{processInstanceId}
        </if>
        <if test="processDefinitionId != null">
          and SELF.PROC_DEF_ID_ = #{processDefinitionId}
        </if>
        <if test="processDefinitionKey != null">
          and SELF.PROC_DEF_KEY_ = #{processDefinitionKey}
        </if>
        <if test="priorityHigherThanOrEqual != null">
          and SELF.PRIORITY_ &gt;= #{priorityHigherThanOrEqual}
        </if>
        <if test="priorityLowerThanOrEqual != null">
          and SELF.PRIORITY_ &lt;= #{priorityLowerThanOrEqual}
        </if>
        <if test="tenantIds != null &amp;&amp; tenantIds.length > 0">
          and SELF.TENANT_ID_ in
          <foreach item="tenantId" index="index" collection="tenantIds"
                   open="(" separator="," close=")">
            #{tenantId}
          </foreach>
        </if>
        <if test="state != null">
          and SELF.STATE_ = #{state.stateCode}
        </if>

        <if test="authCheck.isAuthorizationCheckEnabled &amp;&amp; authCheck.authUserId != null">
          <include refid="org.camunda.bpm.engine.impl.persistence.entity.AuthorizationEntity.queryAuthorizationCheck"/>
        </if>
        <include refid="org.camunda.bpm.engine.impl.persistence.entity.TenantEntity.queryTenantCheckWithSelfPrefix"/>

      </where>
    ) RES
  </sql>



</mapper>